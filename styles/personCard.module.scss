.Title {
  color: rgba(255, 255, 255, 0.8);
  font-size: 1rem;
  margin: 0;
  padding: 0;
  text-align: center;
  text-size-adjust: auto;
  @media (orientation: landscape) and (min-width: 600px) and (max-width: 896px) {
    font-size: 10px;
  }
  @media (max-width: 724px) {
    font-size: 0.7rem;
  }
}

.Information {
  align-items: center;
  flex-direction: column;
  justify-content: center;
  mix-blend-mode: luminosity;
  padding: 5px;
  width: 100%;

  @media (max-width: 724px) {
    bottom: auto;
    width: auto;
    height: auto;
    white-space: wrap;
    max-width: 70%;
    // h3 {
    //   font-size: ${(props) => (props.extend > 20 ? '0.5rem' : '0.7rem')};
    // }
  }
}

@mixin animate($animation, $duration, $method, $times) {
  animation: $animation $duration $method $times;
}

@mixin keyframes($name) {
  @keyframes #{$name} {
    @content;
  }
}

.Wrapper {
  position: relative;
  display: flex;
  flex: 1;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background-color: #090c14;
  border: transparent;
  cursor: pointer;
  border-radius: 8px;
  min-height: 220px;
  overflow: hidden;
  transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;

  &:active {
    transform: scale(0.95);
  }

  width: 90%;

  @media (max-width: 620px) {
    min-height: 60px;
  }
  @media (max-width: 724px) {
    min-height: 100px;
    &:hover {
      transform: none;
    }
  }
  @media (max-width: 920px) {
    min-height: 120px;
  }
  @media (max-width: 1320px) {
    min-height: 130px;
  }

  @include keyframes(popin) {
    0% {
      transform: scale(0.2);
      opacity: 0;
    }
    75% {
      transform: scale(1);
      animation-timing-function: easeout;
      opacity: 0.7;
    }
    100% {
      transform: scale(1);
      opacity: 1;
    }
  }

  transform-orgin: center;
  transition: all 3s ease-in-out;
  animation-name: popin;
  animation-duration: 0.5s;
  animation-timing-function: easeout;
}

.Loading {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translateX(-50%) translateY(-50%);

  img {
    height: 50px;
    opacity: 0.5;
    width: 50px;
  }
}

.Photo {
  min-height: 100%;
  object-fit: contain;
  //   opacity: ${(props) => (props.opaque ? 1 : 0)};
  pointer-events: none !important;
  //   transform: ${(props) => (props.opaque ? 'scale(1)' : 'scale(0.8)')};
  transition: all 400ms ease;
  border-radius: 8px;
  width: 100%;
}
